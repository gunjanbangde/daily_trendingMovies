{"version":3,"sources":["component/cards/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","movie","poster_path","title","release_date","vote_average","CardList","movies","map","id","SearchBox","searchType","handleChange","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","res","setState","results","this","filteredMovies","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,0CAAqCH,EAAMI,MAAMC,eACrE,sBAAKJ,UAAU,QAAf,UACI,6BACKD,EAAMI,MAAME,QAEjB,0CACcN,EAAMI,MAAMG,aACtB,uBAFJ,WAGaP,EAAMI,MAAMI,wBCTxBC,EAAW,SAAAT,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMU,OAAOC,KAAI,SAAAP,GAAK,OACnB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMQ,UCJhBC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,aAAf,OACrB,uBACId,UAAU,SACVe,KAAK,SACLC,YAAW,iBAAYH,GACvBI,SAAUH,MC6BHI,G,wDA/Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXV,OAAQ,GACRW,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,4FACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKC,SAAS,CAAEjB,OAAQgB,EAAIE,e,+BAGnC,IAAD,SACyBC,KAAKT,MAA7BV,EADD,EACCA,OAAQW,EADT,EACSA,YACVS,EAAiBpB,EAAOqB,QAAO,SAAA3B,GAAK,OACxCA,EAAME,MAAM0B,cAAcC,SAASZ,EAAYW,kBAEjD,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,EAAD,CACEa,WAAW,0BACXC,aAAc,SAAAmB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAU1B,OAAQoB,W,GA1BRO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f3d1ee32.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img alt=\"movie\" src={`https://image.tmdb.org/t/p/w500/${props.movie.poster_path}`} />\n        <div className='texts'>\n            <h2>\n                {props.movie.title}\n            </h2>\n            <p>\n                Release: {props.movie.release_date}\n                <br />\n                Rating: {props.movie.vote_average}\n            </p>\n        </div>\n    </div>\n);","import React from 'react';\nimport './card-list.style.css';\nimport { Card } from '../cards/card.component';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.movies.map(movie => (\n            <Card key={movie.id} movie={movie} />\n        ))}\n    </div>\n);","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ searchType, handleChange }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={`Search ${searchType}`}\n        onChange={handleChange}\n    />\n);","import React, { Component } from 'react';\nimport { CardList } from './component/card-list/card-list.component.jsx';\nimport { SearchBox } from './component/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/trending/movie/day?api_key=53919d6b6d5671ee64b94736eb8bab57')\n      .then(response => response.json())\n      .then(res => this.setState({ movies: res.results }));\n  }\n\n  render() {\n    const { movies, searchField } = this.state;\n    const filteredMovies = movies.filter(movie =>\n      movie.title.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <SearchBox\n          searchType=\"Today's Trending Movies\"\n          handleChange={e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList movies={filteredMovies} />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}